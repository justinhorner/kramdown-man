.\" Generated by kramdown-man 0.1.9
.\" https://github.com/postmodern/kramdown-man#readme
.TH kramdown-man.1 "April 2013" kramdown-man "User Manuals"
.LP
.SH SYNOPSIS
.LP
.PP
\fBkramdown-man\fR \[lB]\fIoptions\fP\[rB] <\fIINPUT\fP >\fIOUTPUT\fP
.LP
.SH DESCRIPTION
.LP
.PP
A Kramdown
.UR http:\[sl]\[sl]kramdown\.gettalong\.org\[sl]
.UE plugin for converting Markdown files into man pages\.
.LP
.SH ARGUMENTS
.LP
.TP
\fIINPUT\fP
The input markdown file to convert\.
.LP
.TP
\fIOUTPUT\fP
The output file for the man page\.
.LP
.SH OPTIONS
.LP
.TP
\fB-h\fR, \fB--help\fR
Prints the usage for \fBkramdown-man\fR\.
.LP
.SH EXAMPLE
.LP
.nf
require \(aqkramdown\(aq
require \(aqkramdown\[sl]man\(aq

doc \[eq] Kramdown::Document\.new(File\.read(\(aqman\[sl]kramdown\-man\.1\.md\(aq))
File\.write(\(aqman\[sl]kramdown\-man\.1\(aq,doc\.to\[ru]man)
system \(aqman\(aq, \(aqman\[sl]kramdown\-man\.1\(aq
.fi
.LP
.SH SYNTAX
.LP
.SS Code
.LP
.nf
\`code\`
.fi
.LP
.PP
\fBcode\fR
.LP
.SS Emphasis
.LP
.nf
*emphasis*
.fi
.LP
.PP
\fIemphasis\fP
.LP
.SS Strong
.LP
.nf
**strong**
.fi
.LP
.PP
\fBstrong\fP
.LP
.SS Paragraph
.LP
.nf
Normal paragraph\.
.fi
.LP
.PP
Normal paragraph\.
.LP
.SS Usage String
.LP
.nf
\`command\` \[lB]\`\-\-foo\`\[rB] **FILE**
.fi
.LP
.PP
\fBcommand\fR \[lB]\fB--foo\fR\[rB] \fBFILE\fP
.LP
.SS Argument Definitions
.LP
.nf
*ARG*
  Description here\.
.fi
.LP
.TP
\fIARG\fP
Description here\.
.LP
.SS Option Definitions
.LP
.nf
\`\-\-tagged\`
  Text here\.
.fi
.LP
.TP
\fB--tagged\fR
Description here\.
.LP
.SS Links
.LP
.nf
\[lB]website\[rB](http:\[sl]\[sl]example\.com\[sl])
.fi
.LP
.PP
website
.UR http:\[sl]\[sl]example\.com\[sl]
.UE
.LP
.SS Man Pages
.LP
.nf
\[lB]bash\[rB](man:bash(1))
.fi
.LP
.PP
.BR bash (1)
.LP
.SS Email Addresses
.LP
.nf
Email <bob\[at]example\.com>
.fi
.LP
.PP
Email 
.MT bob\[at]example\.com
.ME
.LP
.SS Lists
.LP
.nf
* one
* two
* three
.fi
.LP
.RS
.IP \(bu 2
one
.IP \(bu 2
two
.IP \(bu 2
three
.RE
.LP
.SS Numbered Lists
.LP
.nf
1\. one
2\. two
3\. three
.fi
.LP
.nr step1 0 1
.RS
.IP \n+[step1]
one
.IP \n+[step1]
two
.IP \n+[step1]
three
.RE
.LP
.SS Horizontal Rule
.LP
.nf
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.LP
.ti 0
\l'\n(.lu'
.LP
.SS Blockquotes
.LP
.nf
> Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away\.
>
> \-\-Antoine de Saint\-Exup\['e]ry
.fi
.LP
.PP
.RS
Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away\.
.LP
\-\-Antoine de Saint\-Exup\['e]ry
.RE
.LP
.SS Code Blocks
.LP
.nf
Source code:

    \[sh]include <stdio\.h>

    int main()
    \[lC]
        printf(\[dq]hello world\en\[dq]);
        return 0;
    \[rC]
.fi
.LP
.PP
Source code:
.LP
.nf
\[sh]include <stdio\.h>

int main()
\[lC]
    printf(\[dq]hello world\en\[dq]);
    return 0;
\[rC]
.fi
.LP
.SH AUTHOR
.LP
.PP
Postmodern 
.MT postmodern\.mod3\[at]gmail\.com
.ME
.LP